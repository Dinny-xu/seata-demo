transport {
  # tcp udt unix-domain-socket
  type = "TCP"
  #NIO NATIVE
  server = "NIO"
  #enable heartbeat
  heartbeat = true #client和server通信心跳检测开关
  # the client batch send request enable
  enableClientBatchSendRequest = true #客户端事务消息请求是否批量合并发送
  #thread factory for netty
  threadFactory {
    bossThreadPrefix = "NettyBoss"
    workerThreadPrefix = "NettyServerNIOWorker"
    serverExecutorThread-prefix = "NettyServerBizHandler"
    shareBossWorker = false
    clientSelectorThreadPrefix = "NettyClientSelector"
    clientSelectorThreadSize = 1
    clientWorkerThreadPrefix = "NettyClientWorkerThread"
    # netty boss thread size,will not be used for UDT
    bossThreadSize = 1
    #auto default pin or 8
    workerThreadSize = "default"
  }
  shutdown {
    # when destroy server, wait seconds
    wait = 3
  }
  serialization = "seata"
  compressor = "none"
}
service {
  # test_tx_group: 是事务组名称，要与application.yml中配置一致
  # seata_tc_server: 是TC服务端在注册中心的id，将来通过注册中心获取TC地址
  vgroupMapping.test_tx_group = "seata_tc_server"
  #only support when registry.type=file, please don't set multiple addresses
  seata_tc_server.grouplist = "127.0.0.1:8091"
  #degrade, current not support
  enableDegrade = false #服务降级开关，默认关闭。如果开启，当业务重试多次失败后会放弃全局事务
  #disable seata
  disableGlobalTransaction = false #全局事务开关，默认false。false为开启，true为关闭
}
# rm:资源管理器配置
client {
  rm {
    asyncCommitBufferLimit = 10000 #二阶段提交默认是异步执行，这里指定异步队列的大小
    # 全局锁配置
    lock {
      retryInterval = 10 # 校验或占用全局锁重试间隔，默认10，单位毫秒
      retryTimes = 30    # 校验或占用全局锁重试次数，默认30次
      retryPolicyBranchRollbackOnConflict = true # 分支事务与其它全局回滚事务冲突时锁策略，默认true，优先释放本地锁让回滚成功
    }
    reportRetryCount = 5
    tableMetaCheckEnable = false
    reportSuccessEnable = false
  }
 # tm:事务管理器配置
  tm {
    commitRetryCount = 5   # 一阶段全局提交结果上报TC重试次数，默认1
    rollbackRetryCount = 5 # 一阶段全局回滚结果上报TC重试次数，默认1
  }
  # undo_log的配置
  undo {
    dataValidation = true           # 是否开启二阶段回滚镜像校验，默认true
    logSerialization = "jackson"    # undo序列化方式，默认Jackson
    logTable = "undo_log"           # 自定义undo表名，默认是`undo_log`
  }
  # 日志配置
  log {
    exceptionRate = 100 # 出现回滚异常时的日志记录频率，默认100，百分之一概率。回滚失败基本是脏数据，无需输出堆栈占用硬盘空间
  }
}